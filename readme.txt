Game Execution Method: The GitHub link or "My project.7z" is the complete Unity project file, which can be opened as a project in Unity, while "Individual Game Prototype.zip" is the executable version.

Prototype Content Introduction: This prototype is primarily developed based on a tutorial from the Unity3D Chinese classroom, available at https://learn.u3d.cn/tutorial/slay-the-spire-like-card-game. It uses a large amount of material and some C# code files provided in this class, and the overall project structure is based on this classroom as well. The main goal of this project is to complete a combat section of a game similar to "Slay the Spire" using Unity, with about 60% of the functionalities currently implemented.

Current Features Introduction: As of now, the basic logic of the game's combat part has been implemented, especially the basic card part, which is largely complete. Only the addition of different cards and card effects needs to be done in the future. I will mainly talk about what I have not been able to implement compared to "Slay the Spire": A part that was in the tutorial but I did not implement includes the turn cost limitation, buffs and debuffs, enemy action logic, and the end of combat. These are parts that the tutorial covers, but I couldn't implement due to time constraints. So, in the current version, after defeating an enemy, the enemy's health bar will disappear, but the enemy's figure will still remain on the field. The buffs and debuffs, which are essential for the relic system, thus the benefits of relics on combat were not implemented, and there was basically no time left for other parts. Another part is the limitations of this tutorial itself, first is the draw and discard system. Careful observation will reveal that in the current version, when the number of cards in the draw pile is less than the number of hands to draw, it will first put the cards from the discard pile into the draw pile and then randomly draw five cards, instead of drawing all the cards in the current draw pile first. This implementation method, while not entirely illogical, could lead to some cards not being drawn as intended, which should be avoided. Another issue is that the method of putting used cards into the discard pile is not perfect enough. The method in the tutorial could cause used cards not to be correctly removed from the hand, leading to cards being repeatedly shuffled into the discard pile, creating a situation where more cards are played. Due to the logical problems with card implementation, if the GetInstanceID method is chosen, it might lead to deleting cards that shouldn't be deleted or deleting the wrong cards. I have temporarily completed this part using a rather ingenious method, but the tolerance for error seems very low, and there might be problems in later stages of the project. I have already reported this issue to the tutorial provider, but I have not yet received a response. Also, the animations for enemies and our side being hit or attacking have not yet been implemented.